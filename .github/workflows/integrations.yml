name: CICD-nodejs

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2 # Change to your desired AWS region (the region where your ECR is created)
  ECR_REPOSITORY: my-nodejs-app # Replace with the name of your ECR repository
  CONTAINER_NAME: my-nodejs-app
  ECS_TD: .github/workflows/task-definition.json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # Add your AWS Account ID to GitHub Secrets

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set GitHub run number
        id: set_run_number
        run: echo "RUN_NUMBER=$(echo $GITHUB_RUN_ID)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          region: ${{ env.AWS_REGION }}

      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG_LATEST: latest
          IMAGE_TAG_RUN_NUMBER: ${{ env.RUN_NUMBER }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG_LATEST -t $REGISTRY/$REPOSITORY:$IMAGE_TAG_RUN_NUMBER .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG_LATEST
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG_RUN_NUMBER
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG_RUN_NUMBER" >> $GITHUB_ENV

  update-deployment:
    name: Update Deployment YAML
    runs-on: ubuntu-latest
    needs: [build-and-push] # Ensure the first job completes before running this one

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set latest image tag
        run: |
          # Get the latest image tag from the environment
          LATEST_IMAGE_TAG=${{ env.IMAGE_TAG_LATEST }}
        
          # Update the deployment.yaml file with the latest image tag
          sed -i "s/${{ env.ECR_REPO_URI }}:latest/${{ env.ECR_REPO_URI }}:${LATEST_IMAGE_TAG}/" deployment.yml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deployment.yml
          git commit -m "Update container image tag to latest"
          git remote add origin_with_token "https://$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git push --set-upstream origin_with_token $GITHUB_REF

        env:
          GITHUB_REF: ${{ github.ref }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
