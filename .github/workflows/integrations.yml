name: CICD-nodejs

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1 # Change to your desired AWS region (the region where your ECR is created)
  ECR_REPOSITORY: my-nodejs-app # Replace with the name of your ECR repository
  CONTAINER_NAME: my-nodejs-app
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # Add your AWS Account ID to GitHub Secrets

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set GitHub run number
        id: set_run_number
        run: echo "RUN_NUMBER=$(echo $GITHUB_RUN_ID)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          region: ${{ env.AWS_REGION }}

      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE_TAG_LATEST: latest
          IMAGE_TAG_RUN_NUMBER: ${{ env.RUN_NUMBER }}
        run: |
          docker build -t $REGISTRY/$${{ env.ECR_REPOSITORY }}:$IMAGE_TAG_LATEST -t $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG_RUN_NUMBER .
          docker push $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG_LATEST
          docker push $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG_RUN_NUMBER
          echo "image=$REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG_RUN_NUMBER" >> $GITHUB_ENV